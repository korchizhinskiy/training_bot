from aiogram import Router
from aiogram.types import Message
from aiogram.dispatcher.fsm.context import FSMContext
from aiogram.dispatcher.filters import Command

from tgbot.filters.role import Role_Filter
from tgbot.models.role import UserRole

from tgbot.services.repository import Repo, UserRepo



user_menu_router = Router()
# Can use other variants:
# @admin_welcome_router.message(Role_Filter(user_role=[UserRole.ADMIN]), commands=["check"])
# @admin_welcome_router.message(Role_Filter(user_role=[UserRole.ADMIN, UserRole.USER]), commands=["check"])

@user_menu_router.message(Role_Filter(user_role=UserRole.USER), Command(commands=["start"]), flags={"database_type": "repo"})
async def admin_welcome(message: Message, repo: Repo) -> None:
    if await repo.add_user(message.from_user.id, message.from_user.first_name):
        await message.answer(
                f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}. –î–∞–≤–∞–π –∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è!üëã\n"
                f"–Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π —Ç—Ä–µ–Ω–µ—Ä, –±—É–¥—É –ø–æ–º–æ–≥–∞—Ç—å —Ç–µ–±–µ —Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ª—É—á—à–µ.\n"
                f"–ù–∞–¥–µ—é—Å—å, —á—Ç–æ —Ç—ã —É–∂–µ –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è —Å —Ü–µ–ª—è–º–∏ üí™\n"
                f"–ß—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –º–Ω–æ–π, —Ç—ã –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –ø—É–Ω–∫—Ç–æ–º \"–ú–µ–Ω—é\" –≤ –Ω–∏–∂–Ω–µ–π —á–∞—Å—Ç–∏ —ç–∫—Ä–∞–Ω–∞.\n"
                f"–£–¥–∞—á–∏ —Ç–µ–±–µ, –∞ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—å –∂–µ–ª–∞–µ–º—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤!üòé"
                )
    else:
        await message.answer(f"{message.from_user.first_name.capitalize()}, –ø—Ä–∏–≤–µ—Ç. –°–Ω–æ–≤–∞ —Ä–∞–¥ –≤—Å—Ç—Ä–µ—á–µ. –ü–æ–º–Ω–∏—à—å, –∫–∞–∫ –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è? üëΩ ")


@user_menu_router.message(Role_Filter(user_role=UserRole.USER), Command(commands=["exercises"]), flags={"database_type": "user_repo"})
async def admin_welcome(message: Message, repo: UserRepo) -> None:
    exercises = await repo.print_exercise()
    await message.answer("<b>–í–µ—Å—å —Å–ø–∏—Å–æ–∫ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏–π.</b>" + "\n\n‚¶ø " + "\n‚¶ø ".join(exercises))

    

